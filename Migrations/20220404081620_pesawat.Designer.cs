// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Traveler.Data;

namespace Traveler.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220404081620_pesawat")]
    partial class pesawat
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.15");

            modelBuilder.Entity("Traveler.Models.Email", b =>
                {
                    b.Property<string>("NamaClientnya")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("EmailKita")
                        .HasColumnType("text");

                    b.Property<string>("PasswordEmailKita")
                        .HasColumnType("text");

                    b.Property<int>("Portnya")
                        .HasColumnType("int");

                    b.HasKey("NamaClientnya");

                    b.ToTable("Tb_Email");
                });

            modelBuilder.Entity("Traveler.Models.Jam_kereta", b =>
                {
                    b.Property<string>("id_jam")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("jam_berangkat")
                        .HasColumnType("text");

                    b.Property<string>("jam_sampai")
                        .HasColumnType("text");

                    b.HasKey("id_jam");

                    b.ToTable("Tb_JamKereta");
                });

            modelBuilder.Entity("Traveler.Models.Jam_pesawat", b =>
                {
                    b.Property<string>("id_jam")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("jam_berangkat")
                        .HasColumnType("text");

                    b.Property<string>("jam_sampai")
                        .HasColumnType("text");

                    b.HasKey("id_jam");

                    b.ToTable("Tb_JamPesawat");
                });

            modelBuilder.Entity("Traveler.Models.Jam_travel", b =>
                {
                    b.Property<string>("id_jam")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("jam_berangkat")
                        .HasColumnType("text");

                    b.Property<string>("jam_sampai")
                        .HasColumnType("text");

                    b.HasKey("id_jam");

                    b.ToTable("Tb_JamTravel");
                });

            modelBuilder.Entity("Traveler.Models.Jenis_kereta", b =>
                {
                    b.Property<string>("id_jenisker")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("nama")
                        .HasColumnType("text");

                    b.HasKey("id_jenisker");

                    b.ToTable("Tb_JenisKereta");
                });

            modelBuilder.Entity("Traveler.Models.Jenis_travel", b =>
                {
                    b.Property<string>("id_jenistrav")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("nama")
                        .HasColumnType("text");

                    b.HasKey("id_jenistrav");

                    b.ToTable("Tb_JenisTravel");
                });

            modelBuilder.Entity("Traveler.Models.Kelas", b =>
                {
                    b.Property<string>("id_kelas")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("nama")
                        .HasColumnType("text");

                    b.HasKey("id_kelas");

                    b.ToTable("Kelas");
                });

            modelBuilder.Entity("Traveler.Models.Kereta", b =>
                {
                    b.Property<string>("kode_kereta")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("dari")
                        .HasColumnType("text");

                    b.Property<int>("harga")
                        .HasColumnType("int");

                    b.Property<string>("jam_Keretaid_jam")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("jenis_Keretaid_jenisker")
                        .HasColumnType("varchar(767)");

                    b.Property<int>("jml_kursi")
                        .HasColumnType("int");

                    b.Property<string>("ke")
                        .HasColumnType("text");

                    b.Property<string>("kelasid_kelas")
                        .HasColumnType("varchar(767)");

                    b.HasKey("kode_kereta");

                    b.HasIndex("jam_Keretaid_jam");

                    b.HasIndex("jenis_Keretaid_jenisker");

                    b.HasIndex("kelasid_kelas");

                    b.ToTable("Tb_Kereta");
                });

            modelBuilder.Entity("Traveler.Models.Maskapai", b =>
                {
                    b.Property<string>("id_maskapai")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("nama")
                        .HasColumnType("text");

                    b.HasKey("id_maskapai");

                    b.ToTable("Tb_Maskapan");
                });

            modelBuilder.Entity("Traveler.Models.Pelanggan", b =>
                {
                    b.Property<string>("nik")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("kartu_vaksin")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("nama_pelanggan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("no_telp")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("nik");

                    b.ToTable("Tb_Pelanggan");
                });

            modelBuilder.Entity("Traveler.Models.Pesawat", b =>
                {
                    b.Property<string>("kode_pesawat")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("Maskapaiid_maskapai")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("dari")
                        .HasColumnType("text");

                    b.Property<int>("harga")
                        .HasColumnType("int");

                    b.Property<string>("jam_Pesawatid_jam")
                        .HasColumnType("varchar(767)");

                    b.Property<int>("jml_kursi")
                        .HasColumnType("int");

                    b.Property<string>("ke")
                        .HasColumnType("text");

                    b.Property<string>("kelasid_kelas")
                        .HasColumnType("varchar(767)");

                    b.HasKey("kode_pesawat");

                    b.HasIndex("Maskapaiid_maskapai");

                    b.HasIndex("jam_Pesawatid_jam");

                    b.HasIndex("kelasid_kelas");

                    b.ToTable("Tb_Pesawat");
                });

            modelBuilder.Entity("Traveler.Models.Roles", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tb_Roles");
                });

            modelBuilder.Entity("Traveler.Models.Travel", b =>
                {
                    b.Property<string>("kode_travel")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("dari")
                        .HasColumnType("text");

                    b.Property<int>("harga")
                        .HasColumnType("int");

                    b.Property<string>("jam_Keretaid_jam")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("jenis_Travelid_jenistrav")
                        .HasColumnType("varchar(767)");

                    b.Property<int>("jml_kursi")
                        .HasColumnType("int");

                    b.Property<string>("ke")
                        .HasColumnType("text");

                    b.HasKey("kode_travel");

                    b.HasIndex("jam_Keretaid_jam");

                    b.HasIndex("jenis_Travelid_jenistrav");

                    b.ToTable("Tb_Travel");
                });

            modelBuilder.Entity("Traveler.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RolesId")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("RolesId");

                    b.ToTable("Tb_User");
                });

            modelBuilder.Entity("Traveler.Models.transaksi", b =>
                {
                    b.Property<string>("id_transaksi")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("Pelanggannik")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("dari")
                        .HasColumnType("text");

                    b.Property<int>("harga")
                        .HasColumnType("int");

                    b.Property<string>("jam_berangkat")
                        .HasColumnType("text");

                    b.Property<string>("jam_sampai")
                        .HasColumnType("text");

                    b.Property<int>("jml_orang")
                        .HasColumnType("int");

                    b.Property<string>("ke")
                        .HasColumnType("text");

                    b.Property<DateTime>("tgl_transaksi")
                        .HasColumnType("datetime");

                    b.Property<string>("type_transaksi")
                        .HasColumnType("text");

                    b.HasKey("id_transaksi");

                    b.HasIndex("Pelanggannik");

                    b.ToTable("Tb_Transaksi");
                });

            modelBuilder.Entity("Traveler.Models.Kereta", b =>
                {
                    b.HasOne("Traveler.Models.Jam_kereta", "jam_Kereta")
                        .WithMany()
                        .HasForeignKey("jam_Keretaid_jam");

                    b.HasOne("Traveler.Models.Jenis_kereta", "jenis_Kereta")
                        .WithMany()
                        .HasForeignKey("jenis_Keretaid_jenisker");

                    b.HasOne("Traveler.Models.Kelas", "kelas")
                        .WithMany()
                        .HasForeignKey("kelasid_kelas");

                    b.Navigation("jam_Kereta");

                    b.Navigation("jenis_Kereta");

                    b.Navigation("kelas");
                });

            modelBuilder.Entity("Traveler.Models.Pesawat", b =>
                {
                    b.HasOne("Traveler.Models.Maskapai", "Maskapai")
                        .WithMany()
                        .HasForeignKey("Maskapaiid_maskapai");

                    b.HasOne("Traveler.Models.Jam_pesawat", "jam_Pesawat")
                        .WithMany()
                        .HasForeignKey("jam_Pesawatid_jam");

                    b.HasOne("Traveler.Models.Kelas", "kelas")
                        .WithMany()
                        .HasForeignKey("kelasid_kelas");

                    b.Navigation("jam_Pesawat");

                    b.Navigation("kelas");

                    b.Navigation("Maskapai");
                });

            modelBuilder.Entity("Traveler.Models.Travel", b =>
                {
                    b.HasOne("Traveler.Models.Jam_kereta", "jam_Kereta")
                        .WithMany()
                        .HasForeignKey("jam_Keretaid_jam");

                    b.HasOne("Traveler.Models.Jenis_travel", "jenis_Travel")
                        .WithMany()
                        .HasForeignKey("jenis_Travelid_jenistrav");

                    b.Navigation("jam_Kereta");

                    b.Navigation("jenis_Travel");
                });

            modelBuilder.Entity("Traveler.Models.User", b =>
                {
                    b.HasOne("Traveler.Models.Roles", "Roles")
                        .WithMany()
                        .HasForeignKey("RolesId");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("Traveler.Models.transaksi", b =>
                {
                    b.HasOne("Traveler.Models.Pelanggan", "Pelanggan")
                        .WithMany()
                        .HasForeignKey("Pelanggannik");

                    b.Navigation("Pelanggan");
                });
#pragma warning restore 612, 618
        }
    }
}
